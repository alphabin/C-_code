/*
 * Main.cpp
 *
 *  Created on: Jun 8, 2016
 *      Author: Chatura ahangama
 */


#include "Employee.h"
#include "Programmer.h"
#include "SoftArchitect.h"
#include <string>


#include <iostream>



using namespace std;

int main()
{

  //Populating the data for the Employees

  Employee Jimmy;  //Employee with the deafult constructor
  Jimmy.print();   //Printing the results of 'normal' deafult constructor

  Employee Stephan("Stephan Colbert",12346,3105555555,51,"M","Comedian",70000,5,8,2015); //Employee Non-default construct
  Stephan.print();

  Employee James("James Corden",87654,7037031234,37,"M","TalkShowHost",900000,12,25,3014); //Employee Non-default construct
  James.print();

  Employee Katie("Katie Couric",77777,2035556789,58,"F","News Reporter",500500,03,01,2005); //Employee Non-default construct
  Katie.print();


  //Populating the data for the Programmers

  Programmer Sam; // Programmer default construct
  Sam.print(); // Print Programmer default construct

  Programmer Mary("Mary Coder",65432,3105555555,28,"F","Programmer",770123,2,8,2010,6543222,"Mary Leader",7,"YES","YES"); // Programmer Non-default construct
  Mary.print(); // Print Programmer Non-default construct

  SoftArchitect Alex;// Programmer default construct
  Alex.print(); //Populating the data for the Software Architects Class

  SoftArchitect Sally("Sally Designer",6543422,3105558888,38,"F","Architect",870123,2,8,2003,6543422,"Big Boss",8,11);
  Sally.print();

  /*
  Employee first("James Corden",12345,8181721515,40,"M","Comedian",1000000,8,14,1923); //Employee Non-default construct
  first.print();


  Programmer normal1;
  //normal1.print();
  Programmer second("Chatura Jones",12345,8181721515,40,"M","Programmer",1000000,3,14,1992,22134,"Mrs Jones",4,"NO","YES");
  second.print();


  SoftArchitect normal2;
  normal2.print();
  SoftArchitect third("Chatura A",12345,8181721515,40,"M","Architect",1000000,1,14,1912,22134,"Mr Jones",4,13);
  third.print();


  //checkNum(first,second);
  if (first == normal)
	  cout<<endl<<"True by Overload Checking";
  else
	  cout<<endl<<"False by Overloading";


  normal.print();
  normal.addIntAge(33);
  normal=normal+15;
  normal.print();

  cout<<first;

  Employee tests;

  cin>>tests;

  tests.print();
  */

};



